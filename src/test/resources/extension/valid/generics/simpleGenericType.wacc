begin

newtype List<A> is union
    Nil;
    Node of (A elem, List<A> next);
end

trait A: Eq is
    bool equals(A a, A b) is required
    bool notEquals(A a, A b) is
        return !equals(a, b);
    end
end

List<int> a = Nil();
List<int> b = Node(4, a);
List<char> c = Nil();
List<char> d = Node('A', c);
List<List<int>> k = Nil();
List<List<int>> j = Node(a, k);
List<List<int>> m = Node(b, k);

end